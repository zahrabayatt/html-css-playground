*,
*::after,
*::before {
  box-sizing: border-box;
}

html {
  font-size: 62.5%;
}

body {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
}

.box {
  width: 100px;
  height: 100px;
  background-color: gold;
}

/* .box:hover { */
/* + value = closer to user, - value = farther from user*/
/*first define perspective view which means the distance between user and element.*/
/* transform: perspective(200px) translateZ(-50px); */

/* transform: perspective(200px) rotateZ(45deg); */
/* transform: perspective(200px) rotateY(45deg); */
/* transform: perspective(200px) rotateX(45deg); */

/* change transform origin, by default is center of element */
/* transform-origin: x-offset y-offset */
/* transform-origin: 0 0; top left corner of element */
/* transform-origin: 0 50%; */
/* } */
/* ---------------------- */
/* Apply animation to all elements : grab them in one container and apply animation to container */

/* .container:hover {
  transform: perspective(200px) rotateY(45deg);
} */

/* ----------------------------- */
/* Apply animation to each element of container separately */
/* .container:hover .box {
  transform: perspective(200px) rotateY(45deg);
} */

/* ----------------------------- */
/* make perspective of elements same in the container  */
/* .container {
  perspective: 200px;
}

.container:hover .box {
  transform: rotateY(45deg);
} */
/* ------------------------------------------- */
.container {
  perspective: 200px;
}

.container:hover .box {
  transform: rotateY(45deg);
}
.container:hover .box-two {
  transform: rotateX(45deg);
}
/* 
  - 3D Transformations: 
    move elements along the z axes. 
*/
